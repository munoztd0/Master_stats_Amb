---
title: "ANALYSIS REPORT"
author: "David Munoz Tord"
date: "`r format(Sys.time(), '%d %B, %Y')`"
output:
  html_document:  
    includes:
    code_folding: "hide"
    toc: true
    toc_float: false
    number_sections: false
  pdf_document:
    extra_dependencies: ["float"]
repro:
  data:
    data_ambroise_full: Enquete_Ambroise.sav
    
  packages: [ aaronpeikert/repro@devel, crsh/papaja@devel, tinylabels, apaTables, haven, ggplot2,  tidyverse, gtsummary, car, GGally, MASS, matrixStats, rcompanion, moments, utils, sjPlot, interactions]
  scripts: clean.R
---

### Setup {-}
  
```{r setup, results='hide', message=FALSE, warning=FALSE}

library(repro)
# load packages from yaml header
automate_load_packages()
# include external scripts
automate_load_scripts()

# load data
data_ambroise_full  <- automate_load_data(data_ambroise_full, read_sav)

## we recommend running this is a fresh R session or restarting your current session
#install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
#install_cmdstan()


# check_git(); check_make(); check_docker() #check if installed


sessio = sessionInfo(); #opts_chunk$set(echo = F, message=F, warning=F) # set echo F for all


#May I suggest running `repro::automate()`? 

#This will create a `Dockerfile` & `Makefile` based on every RMarkdown in this folder and the special yamls in them. date: "`r format(Sys.time(), '%d %B, %Y')`" 
  
```

This file was automatically created via `the Repro package (version 0.1.0)` using  `r sessio$R.version$version.string`




```{r options, results='hide', message=FALSE, warning=FALSE}
options(scipen = 666, warn=-1, contrasts=c("contr.sum","contr.poly"))  #remove scientific notation # remove warnings #set contrasts to sum ! #remove scientific notation # remove warnings #set contrasts to sum !
 #cl = parallel::detectCores()/2
set.seed(666) #set random seed

# panderOptions('knitr.auto.asis', FALSE) #remove auto styling

# Look at R/clean.R (listed in the YAML) which does all the preprocessing for more info


# If you are unsure weather or not you have `git` `make` & `docker`.
# check_git()
# check_make()
# check_docker()
```




```{r clean, include=FALSE,  cache = TRUE}
# this chunk runs clean.R (listed in the YAML) which does all the preprocessing
```

### Introduction
Blabla

#### Demographics
```{r demographics}
base[c("Age", "Gender", "Profession")] %>%  tbl_summary(statistic = list(all_continuous() ~ "{mean} ({sd})", all_categorical() ~ "{n} / {N} ({p}%)"),)  %>% modify_caption("**Table 1. Demographics **") %>%
  bold_labels()
```

### Statistics


#### Price
```{r GLM Price}

base_price = filter(base_clean, id %notin% c("11188", "12775")) #remove huge outliers, see appendix

final_price = lm(Price~ Priming + Product + Age + Behav_enviro + Priming:Product,  data = base_price)

apa_lm <- apa_print(anova(final_price))
apa_table(apa_lm$table,  caption = "Anova table for Price.")

plot_model(final_price)

```

#### Probability to buy
```{r GLM Buy}
base_buy = filter(base_clean, id %notin% c("11269","13804", "12766")) #remove huge outliers, see appendix


final_buy = lm(Buy ~ Priming*Product + Age + Behav_enviro + Product:Age +  Product:Behav_enviro + Age:Behav_enviro + Product:Age:Behav_enviro,  data = base_buy)

apa_lm <- apa_print(anova(final_buy))
apa_table(apa_lm$table,  caption = "Anova table for Probability to buy.")

sjPlot::plot_model(final_buy)


```

#### Reccomendation
```{r GLM Recco}
base_recco = filter(base_clean, id %notin% c("13594")) #remove huge outliers, see appendix

final_recco = lm(Reccomend ~Priming*Product + Behav_enviro + Product:Behav_enviro,  data = base_recco)

apa_lm <- apa_print(anova(final_recco))
apa_table(apa_lm$table,  caption = "Anova table for Reccomendation.")


sjPlot::plot_model(final_recco)

interactions::interact_plot(final_recco, pred = Behav_enviro, modx = Product, interval = TRUE)


```
Example for reporting :\

Product (`r apa_lm$full_result$Product`) and Behav_enviro (`r apa_lm$full_result$Behav_enviro`) affected reccomendation. However, the effect of Behav_enviro differed by Product, `r apa_lm$full_result$Product_Behav_enviro`.


```{r diag GLM, fig.show='hide', echo=FALSE, message=FALSE, warning=FALSE}


# Eval eco -------------------------------------------------------------------


```

### Appendix
#### Check normality
```{r annexes}
#check normality

plotNormalHistogram(base_clean$Price, main = "Price")
plotNormalHistogram(base_clean$Reccomend, main = "Reccomendation")
plotNormalHistogram(base_clean$Buy, main = "Probability to buy")

densityPlot(base_clean$Price, g = base_clean$Product) # by product

#The rule of thumb seems to be: If the skewness is between -0.5 and 0.5, the data are fairly symmetrical.
skewness(base_clean$Price, na.rm = TRUE)
skewness(base_clean$Reccomend, na.rm = TRUE)
skewness(base_clean$Buy, na.rm = TRUE)


plotNormalHistogram(sqrt(base_clean$Price), main = "Price")

```

#### Diagnostics Plots for GLM Price

```{r diag GLM Price, echo=FALSE, message=FALSE, warning=FALSE}

modprice = lm(Price ~ Priming*Product*Age*Behav_enviro*Decision_mode, data = base_clean)

plot(modprice, c(1:2,4), labels.id = base_clean$id )


modprice = lm(Price ~ Priming*Product*Age*Behav_enviro, data = base_price)

plot(modprice, c(1:2,4), labels.id = base_price$id )


MS = MASS::stepAIC(modprice, direction = "both", trace = FALSE)
MS$anova
```

#### Diagnostics Plots for GLM Probability to buy
```{r diag GLM Buy, echo=FALSE, message=FALSE, warning=FALSE}

modbuy = lm(Buy ~ Priming*Product*Decision_mode +Age+ Priming*Product*Behav_enviro, data = base_clean)

plot(modbuy, c(1:2,4), labels.id = base_clean$id )


modbuy = lm(Buy ~ Priming*Product*Age*Behav_enviro, data = base_buy)

plot(modbuy, c(1:2,4), labels.id = base_buy$id )


MS = MASS::stepAIC(modbuy, direction = "both", trace = FALSE)
MS$anova


sjPlot::plot_model(final_buy, type = "pred")
```

#### Diagnostics Plots for GLM Reccomendation
```{r diag GLM Recco, echo=FALSE, message=FALSE, warning=FALSE}

modrecco = lm(Reccomend ~ Priming*Product*Decision_mode +Age+ Priming*Product*Behav_enviro, data = base_clean)

plot(modrecco, c(1:2,4), labels.id = base_clean$id )



modrecco = lm(Reccomend ~Priming*Product*Decision_mode +Age+ Priming*Product*Behav_enviro, data = base_recco)

plot(modrecco, c(1:2,4), labels.id = base_recco$id )


MS = MASS::stepAIC(modrecco, direction = "both", trace = FALSE)
MS$anova

sjPlot::plot_model(final_recco, type = "pred")
```

